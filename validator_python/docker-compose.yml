# Versão do arquivo docker-compose
version: '3.8'

services:
  # Serviço Source - Ponto de entrada da aplicação
  source:
    build:
      context: .
      dockerfile: Dockerfile.source
    environment:
      - PYTHONUNBUFFERED=1  # Mantém o output do Python sem buffer
      - NUM_SERVICES_LB1=${NUM_SERVICES_LB1:-1}   # Número de serviços no primeiro load balancer (padrão: 1)
      - NUM_SERVICES_LB2=${NUM_SERVICES_LB2:-1}   # Número de serviços no segundo load balancer (padrão: 1)
      - BASE_PORT_LB1=8083   # Porta base para os serviços do primeiro load balancer
      - BASE_PORT_LB2=8085   # Porta base para os serviços do segundo load balancer
    networks:
      - app-network

  # Primeiro Load Balancer - Recebe requisições do Source
  load-balancer-1:
    build:
      context: .
      dockerfile: Dockerfile.lb
    environment:
      - PYTHONUNBUFFERED=1
      - LB_ID=1              # Identificador do load balancer
      - NUM_SERVICES=${NUM_SERVICES_LB1:-1}       # Número de serviços que este load balancer gerencia (padrão: 1)
      - BASE_PORT=8083       # Porta base para os serviços (8083, 8084)
      - NEXT_LB_HOST=load-balancer-2  # Host do próximo load balancer
      - NEXT_LB_PORT=8085    # Porta do próximo load balancer
    ports:
      - "8083:8083"         # Porta para o primeiro serviço
      - "8084:8084"         # Porta para o segundo serviço
    depends_on:
      - source              # Garante que o source seja iniciado primeiro
    networks:
      - app-network

  # Segundo Load Balancer - Recebe requisições do primeiro load balancer
  load-balancer-2:
    build:
      context: .
      dockerfile: Dockerfile.lb
    environment:
      - PYTHONUNBUFFERED=1
      - LB_ID=2              # Identificador do load balancer
      - NUM_SERVICES=${NUM_SERVICES_LB2:-1}       # Número de serviços que este load balancer gerencia (padrão: 1)
      - BASE_PORT=8085       # Porta base para os serviços (8085, 8086)
    ports:
      - "8085:8085"         # Porta para o primeiro serviço
      - "8086:8086"         # Porta para o segundo serviço
    depends_on:
      - load-balancer-1      # Garante que o primeiro load balancer seja iniciado primeiro
    networks:
      - app-network

# Configuração da rede Docker
networks:
  app-network:
    driver: bridge          # Tipo de rede que permite comunicação entre os containers 